// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.9.20'

    repositories {
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        // SecLib (Smapi) maven repo
        maven {
            url 'https://artifactory.vodafone.com/artifactory/maven-vfgroup-cps-smapi-local/'
            credentials {
                username "${System.env.JFROG_READ_USER}"
                password "${System.env.JFROG_READ_PASS}"
            }
        }
        // Huawei repo
        maven { url 'https://developer.huawei.com/repo/' }
        // hive mqtt - Android API levels below 24
        gradlePluginPortal()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
        //classpath 'io.github.gradle-nexus:publish-plugin:1.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:5.1.12'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()

        // OnePlatform maven repo
        maven {
            url "${System.env.JFROG_ONEPLATFORM_REPO}"
            credentials {
                username "${System.env.JFROG_READ_USER}"
                password "${System.env.JFROG_READ_PASS}"
            }
        }

        // NFHS maven repo
        maven {
            url "${System.env.JFROG_NFHS_REPO}"
            credentials {
                username "${System.env.JFROG_READ_USER}"
                password "${System.env.JFROG_READ_PASS}"
            }
        }

        // GHA maven repo
        maven {
            url "${System.env.JFROG_GHA_REPO}"
            credentials {
                username = "${System.env.JFROG_READ_USER}" // The publisher user name
                password = "${System.env.JFROG_READ_PASS}" // The publisher password
            }
        }

        // SecLib (Smapi) maven repo
        maven {
            url 'https://artifactory.vodafone.com/artifactory/maven-vfgroup-cps-smapi-local/'
            credentials {
                username "${System.env.JFROG_READ_USER}"
                password "${System.env.JFROG_READ_PASS}"
            }
        }

        // Huawei maven repo
        maven { url 'https://developer.huawei.com/repo/' }

        maven {
            url "${System.env.JFROG_NETPERFORM_REPO}"
            credentials {
                username "${System.env.JFROG_READ_USER}"
                password "${System.env.JFROG_READ_PASS}"
            }
        }

        gradlePluginPortal()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

//Switch off predex on CI
ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ('com.android.build.gradle.AppPlugin'.equals(plugin.class.name) || 'com.android.build.gradle.LibraryPlugin'.equals(plugin.class.name)) {
            // enable or disable pre-dexing
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
