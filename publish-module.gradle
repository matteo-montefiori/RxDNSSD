apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.jfrog.artifactory'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = mavenCentralVersion

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = PUBLISH_GROUP_ID
                artifactId = PUBLISH_ARTIFACT_ID
                version = PUBLISH_VERSION

                from components.release
            }
        }
        artifactoryPublish {
            dependsOn('assembleRelease')
            publications(publishing.publications.release)
        }
    }
}

artifactory {
    contextUrl = "${System.env.JFROG_GHA_PUBLISH_REPO}"
    resolve {
        repository {
            repoKey = 'maven-vfgroup-gh-dnssd-local'
            username = "${System.env.JFROG_GHA_WRITE_USER}" // The publisher user name
            password = "${System.env.JFROG_GHA_WRITE_PASS}" // The publisher password
        }
    }
    publish {
        repository {
            repoKey = 'maven-vfgroup-gh-dnssd-local' // The Artifactory repository key to publish to
            username = "${System.env.JFROG_GHA_WRITE_USER}" // The publisher user name
            password = "${System.env.JFROG_GHA_WRITE_PASS}" // The publisher password

        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publishBuildInfo = false
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            publishPom = true // Publish generated POM files to Artifactory (true by default)
        }
    }
}